CloudOS
-------

This is a prototype kernel that is bootable by qemu. Its eventual purpose is to
run CloudABI[0][1] binaries, including the ability to suspend, freeze,
serialize, deserialize, thaw and resume CloudABI binaries. However, it's still
far from that goal.

[0] https://www.bsdcan.org/2015/schedule/track/Security/524.en.html
[1] http://nuxi.nl/cloudabi

To run the tests, compile it with a native (non-cross) compiler:

  mkdir build
  cd build
  cmake -DCMAKE_BUILD_TYPE=Debug ..
  make
  make test

To compile the kernel, first build and install Binutils with '--target
i686-elf', so that you have the GNU linker in your $PATH as i686-elf-ld. Also,
follow the instructions at https://nuxi.nl/ to install the CloudABI toolchain,
which requires a trunk Clang+LLVM. After this, you should also have Clang in
your $PATH as i686-unknown-cloudabi-cc.

The kernel will use the CloudABI-clang compiler to build its source files, even
though they are not true CloudABI source files, because it's easier. It
requires the GNU linker because LLD doesn't support linker scripts yet.

Use the i686-elf toolchain file to set up your build directory for a native
build:

  mkdir build
  cd build
  cmake -DCMAKE_BUILD_TYPE=Debug \
    -DCMAKE_TOOLCHAIN_FILE=../cmake/Toolchain-i686-elf.cmake ..
  make

There are various targets to build or run the kernel in various ways:

  boot      - run inside qemu
  fastboot  - run inside qemu, don't build first
  gdbboot   - run inside qemu with -S -s, i.e. wait for debugger to attach
  iso       - build an ISO file using mkisofs/genisoimage/xorriso
  isoboot   - boot ISO using qemu

Good luck and have fun!

- Sjors Gielen <sjors@sjorsgielen.nl>
